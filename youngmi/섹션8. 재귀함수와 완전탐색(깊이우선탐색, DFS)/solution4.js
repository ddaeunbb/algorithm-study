/* 부분집합 구하기(DFS)
자연수 N이 주어지면 1부터 N까지의 원소를 갖는 집합의 부분집합을 모두 출력하는 프로그램
을 작성하세요.
▣ 입력설명
첫 번째 줄에 자연수 N(1<=N<=10)이 주어집니다.
▣ 출력설명
첫 번째 줄부터 각 줄에 하나씩 부분집합을 아래와 출력예제와 같은 순서로 출력한다.
단 공집합은 출력하지 않습니다. */

// 부분집합 공식: 공집합까지 합치면 2의 n제곱

const solution = (n) => {
  let answer = [];
  // 해당 요소를 부분집합 요소로 채택할지 안할지 기록하는 체크배열
  let ch = Array.from({ length: n + 1 }, () => 0);

  function dfs(v) {
    if (v === n + 1) {
      // 배열 길이만큼 다 봤으면
      let tmp = "";
      for (let i = 1; i <= n; i++) {
        // 1부터 배열 길이만큼 돌면서 부분집합 기록하기
        // 체크배열에 i 요소가 true일 경우 부분집합(tmp)으로 기입
        if (ch[i] === 1) tmp += i + " ";
      }
      // 공집합 제외한 부분집합 출력. trim()은 맨 뒤 뛰어쓰기 없애기 위해
      if (tmp.length > 0) answer.push(tmp.trim());
    } else {
      // 다 확인 안했으면 이번 요소를 부분집합으로 선택하는 경우와 안하는 경우로 dfs 돌리기
      ch[v] = 1;
      dfs(v + 1);
      ch[v] = 0;
      dfs(v + 1);
    }
  }
  dfs(1);
  return answer;
};

console.log(solution(3)); // [ '1 2 3', '1 2', '1 3', '1', '2 3', '2', '3' ]
