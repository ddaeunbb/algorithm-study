/* 입국심사
문제 설명
n명이 입국심사를 위해 줄을 서서 기다리고 있습니다. 각 입국심사대에 있는 심사관마다 심사하는데 걸리는 시간은 다릅니다.

처음에 모든 심사대는 비어있습니다. 한 심사대에서는 동시에 한 명만 심사를 할 수 있습니다. 
가장 앞에 서 있는 사람은 비어 있는 심사대로 가서 심사를 받을 수 있습니다. 
하지만 더 빨리 끝나는 심사대가 있으면 기다렸다가 그곳으로 가서 심사를 받을 수도 있습니다.

모든 사람이 심사를 받는데 걸리는 시간을 최소로 하고 싶습니다.

입국심사를 기다리는 사람 수 n, 각 심사관이 한 명을 심사하는데 걸리는 시간이 담긴 배열 times가 매개변수로 주어질 때, 
모든 사람이 심사를 받는데 걸리는 시간의 최솟값을 return 하도록 solution 함수를 작성해주세요.

제한사항
입국심사를 기다리는 사람은 1명 이상 1,000,000,000명 이하입니다.
각 심사관이 한 명을 심사하는데 걸리는 시간은 1분 이상 1,000,000,000분 이하입니다.
심사관은 1명 이상 100,000명 이하입니다. */

/* X분일 때 최대 몇 명의 사람을 심사할 수 있는지 아는 방법 
	: 각 심사관 별로 심사에 걸리는 시간으로 경과 시간을 나눠서 그 몫을 구하여 전부 더하면 X분일 때 심사 가능한 최대 인원의 수를 구할 수 있다.
*/

const solution = (n, times) => {
  // 걸리는 최소 시간
  let low = 1;
  // 걸리는 최대 시간
  let high = Math.max(...times) * n;
  // 최소 시간이 최대 시간보다 작거나 같을 때까지 while 반복
  while (low <= high) {
    const mid = Math.floor((low + high) / 2);
    // 각 심사관 별로 심사에 걸리는 시간으로 경과 시간을 나눠서 그 몫을 구하여 전부 더하기
    const people = times.reduce((acc, time) => acc + Math.floor(mid / time), 0);
    if (people < n) {
      // mid 분일 때 심사할 수 있는 사람 수(people)가 실제로 검사해야 하는 사람 수 보다 적으면
      // 시간이 부족하다는 말이니까 최소 시간을 mid + 1 로 설정
      low = mid + 1;
    } else {
      // 그 이외는 실제 검사해야 하는 사람 수 보다 많이 할 수 있다
      // 즉 시간이 남아돈다. 따라서 최대로 걸리는 시간을 mid - 1 로 설정
      high = mid - 1;
    }
  }
  return low;
};

console.log(solution(6, [7, 10])); // 28
